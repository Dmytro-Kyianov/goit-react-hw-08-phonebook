{"version":3,"file":"static/js/427.29284919.chunk.js","mappings":"mTAGaA,EAAWC,EAAAA,EAAAA,IAAH,kPAYRC,EAAYD,EAAAA,EAAAA,IAAH,2JASTE,EAAaF,EAAAA,EAAAA,MAAH,qGAOVG,GAAQH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,0LAYLK,EAAUL,EAAAA,EAAAA,OAAH,gc,kHC9BdM,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaE,QAAQC,WAC5BC,SAAUJ,EAAAA,KAAaK,IAAI,GAAGF,aAGhCG,EAAAA,OAAAA,KAAY,CACVC,MAAO,QACPC,SAAU,YACVC,aAAa,EACbC,QAAS,OAwDX,UArDc,WACZ,IAIQC,GAAUC,EAAAA,EAAAA,KAAVD,MACFE,GAAWC,EAAAA,EAAAA,MAOjB,OACE,2BACa,+BAAVH,GAA0CL,EAAAA,OAAAA,QAAeK,IAC1D,SAAC,KAAD,CACEI,cAhBgB,CACpBb,MAAO,GACPE,SAAU,IAeNY,SAVe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BL,GAASM,EAAAA,EAAAA,IAAMF,IACfC,GACD,EAQKE,iBAAkBrB,EAHpB,UAKE,SAAC,KAAD,WACE,UAAC,KAAD,YACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAYsB,QAAQ,QAApB,SAA4B,WAC5B,SAAC,KAAD,CAAOC,GAAG,QAAQC,KAAK,QAAQC,aAAa,MAAMC,KAAK,cAGzD,SAAC,KAAD,CAAcF,KAAK,QAAnB,SACG,SAAAG,GAAG,OAAIpB,EAAAA,OAAAA,QAAeoB,EAAnB,KAEN,UAAC,KAAD,YACE,SAAC,KAAD,CAAYL,QAAQ,WAApB,SAA+B,cAC/B,SAAC,KAAD,CACEC,GAAG,WACHC,KAAK,WACLC,aAAa,MACbC,KAAK,iBAGT,SAAC,KAAD,CAAcF,KAAK,WAAnB,SACG,SAAAG,GAAG,OAAIpB,EAAAA,OAAAA,QAAeoB,EAAnB,KAEN,0BACE,SAAC,KAAD,CAASD,KAAK,SAAd,SAAuB,sBAOpC,C","sources":["pages/AuthStyles/AuthStyles.styled.jsx","pages/Login/Login.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const FormWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  justify-content: center;\n  padding: 40px 20px;\n  text-align: center;\n  border: 3px solid #7E7B72;\n  border-radius: 5px;\n  background-color: #ffffff25;\n`;\n\nexport const InputWrap = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 16px;\n  justify-content: center;\n  align-items: center;\n  padding: 0px 100px;\n`;\n\nexport const InputTitle = styled.label`\n  width: 150px;\n  font-size: 24px;\n  font-weight: 600;\n  color: #7E7B72;\n`;\n\nexport const Input = styled(Field)`\n  width: 500px;\n  font-size: 20px;\n  border-radius: 5px;\n  outline: none;\n  border: 2px solid #7E7B72;\n\n  &:focus {\n    border: 2px solid #f7b603c5;\n  }\n`;\n\nexport const BtnWrap = styled.button`\n  margin-left: auto;\n  margin-right: auto;\n  width: 80px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  border-radius: 5px;\n  border-color: #7E7B72;\n  color: #7E7B72;\n  background-color: #f7b603c5;\n\n  font-size: 16px;\n  font-weight: 600;\n  transition: transform 0.5s 0.1s ease;\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    transform: scale(1.2);\n  }\n`;","import { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/authOperations';\nimport { useAuth } from 'hooks/useAuth';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport {\n  FormWrap,\n  InputWrap,\n  BtnWrap,\n  InputTitle,\n  Input,\n} from '../AuthStyles/AuthStyles.styled';\nconst schema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().min(7).required(),\n});\n\nNotify.init({\n  width: '300px',\n  position: 'right-top',\n  closeButton: false,\n  timeout: 2500,\n});\n\nconst Login = () => {\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n  const { error } = useAuth();\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(logIn(values));\n    resetForm();\n  };\n\n  return (\n    <div>\n      {error !== 'Valid token does not exist' && Notify.warning(error)}\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <Form>\n          <FormWrap>\n            <InputWrap>\n              <InputTitle htmlFor=\"email\">Email</InputTitle>\n              <Input id=\"email\" name=\"email\" autoComplete=\"off\" type=\"email\" />\n            </InputWrap>\n\n            <ErrorMessage name=\"email\">\n              {msg => Notify.warning(msg)}\n            </ErrorMessage>\n            <InputWrap>\n              <InputTitle htmlFor=\"password\">Password</InputTitle>\n              <Input\n                id=\"password\"\n                name=\"password\"\n                autoComplete=\"off\"\n                type=\"password\"\n              />\n            </InputWrap>\n            <ErrorMessage name=\"password\">\n              {msg => Notify.failure(msg)}\n            </ErrorMessage>\n            <div>\n              <BtnWrap type=\"submit\">Submit</BtnWrap>\n            </div>\n          </FormWrap>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n\nexport default Login;"],"names":["FormWrap","styled","InputWrap","InputTitle","Input","Field","BtnWrap","schema","yup","shape","email","required","password","min","Notify","width","position","closeButton","timeout","error","useAuth","dispatch","useDispatch","initialValues","onSubmit","values","resetForm","logIn","validationSchema","htmlFor","id","name","autoComplete","type","msg"],"sourceRoot":""}