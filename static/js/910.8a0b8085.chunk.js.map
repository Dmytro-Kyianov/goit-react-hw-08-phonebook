{"version":3,"file":"static/js/910.8a0b8085.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FormWrap = styled.form`\n  margin-top: 40px;\n  margin-bottom: 40px;\n  padding: 15px 10px;\n  display: flex;\n  flex-direction: row;\n  gap: 26px;\n  align-items: center;\n  justify-content: space-around;\n  border: 3px solid #7E7B72;\n  border-radius: 5px;\n  background-color: #ffffff25;\n`;\n\nexport const InputWrap = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 12px;\n`;\n\nexport const InputTitle = styled.label`\n  font-size: 26px;\n  font-weight: 500;\n  color: #7E7B72;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  border: 2px solid #fff;\n  border-radius: 5px;\n  font-size: 20px;\n  outline: none;\n\n  &:focus {\n    border: 2px solid #f7b603c5;\n  }\n`;\n\nexport const AddBtn = styled.button`\n  width: 110px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  border-radius: 5px;\n  border-color: #7E7B72;\n  color: #7E7B72;\n  background-color: #f7b603c5;\n  \n  font-size: 16px;\n  font-weight: 600;\n  transition: transform 0.5s 0.1s ease;\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    transform: scale(1.2);\n  }\n`;","import { nanoid } from 'nanoid';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContactsThunk } from 'redux/contacts/contactsOperations';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport {\n  FormWrap,\n  InputWrap,\n  InputTitle,\n  Input,\n  AddBtn,\n} from './ContactForm.styled';\n\nNotify.init({\n  width: '300px',\n  position: 'right-top',\n  closeButton: false,\n  timeout: 2500,\n});\n\nexport const ContactForm = () => {\n  const { contacts } = useSelector(state => state.contacts);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = e => {\n    const name = e.target.name;\n    switch (name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const newContact = { name: name, number: number };\n\n  const handleSubmit = e => {\n    e.preventDefault(e);\n    contacts.find(contact => contact.name === name)\n      ? Notify.warning(`${name} is already in contacts`)\n      : dispatch(addContactsThunk(newContact));\n\n    setName('');\n    setNumber('');\n  };\n\n  const nameInputId = nanoid();\n  const numberImputId = nanoid();\n  return ( \n    <FormWrap onSubmit={handleSubmit}>\n      <InputWrap>\n        <InputTitle htmlFor={nameInputId}>Name</InputTitle>\n        <Input\n          id={nameInputId}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          autoComplete=\"off\"\n        />\n      </InputWrap>\n      <InputWrap>\n        <InputTitle htmlFor={numberImputId}>Number</InputTitle>\n        <Input\n          id={numberImputId}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n          autoComplete=\"off\"\n          pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </InputWrap>\n\n      <AddBtn type=\"submit\" >\n        Add contact\n      </AddBtn>\n    </FormWrap>\n  );\n};","import styled from '@emotion/styled';\n\nexport const ContactWrap = styled.ul`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const List = styled.li`\n  list-style: none;\n`;\n\nexport const ContactFrame = styled.div`\n  position: relative;\n  width: 500px;\n  height: 100px;\n  border: 3px solid #7E7B72;\n  border-radius: 5px;\n`;\n\nexport const ContactCard = styled.div`\n  margin-top: 30px;\n  padding-left: 10px;\n  display: flex;\n  gap: 10px;\n`;\n\nexport const ContactValues = styled.span`\n  font-size: 20px;\n  font-weight: 500;\n  color: #;\n`;\n\nexport const DelBtn = styled.button`\n  position: absolute;\n  z-index: 101;\n  top: 8px;\n  right: 8px;\n  padding: 0;\n  display: block;\n  align-items: center;\n  background: none;\n  border: none;\n  outline: none;\n\n  color: #f7b603c5;\n\n  transition: transform 0.5s 0.1s ease;\n\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    transform: scale(1.2);\n    color: #f7b603c5;\n  }\n`;","import { AiFillDelete } from 'react-icons/ai';\nimport { IconContext } from 'react-icons';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Spinner } from 'components/Loader/Loader';\nimport { filterForContacts } from 'redux/contacts/filterContactsSlice';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport {\n  getContactsThunk,\n  deleteContactsThunk,\n} from 'redux/contacts/contactsOperations';\n\nimport {\n  ContactFrame,\n  List,\n  ContactWrap,\n  DelBtn,\n  ContactCard,\n  ContactValues,\n} from './ContactList.styled';\n\nNotify.init({\n  width: '300px',\n  position: 'right-top',\n  closeButton: false,\n  timeout: 2500,\n});\n\nexport const ContactList = () => {\n  const { contacts, error, isLoading } = useSelector(state => state.contacts);\n  const filter = useSelector(filterForContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <>\n      {isLoading && <Spinner />}\n      {error && Notify.failure(error)}\n      {filteredContacts && (\n        <ContactWrap>\n          {filteredContacts.map(({ name, number, id }) => (\n            <List key={id}>\n              <ContactFrame>\n                <ContactCard>\n                  <ContactValues>{name} :</ContactValues>\n                  <ContactValues>{number}</ContactValues>\n                </ContactCard>\n\n                <DelBtn\n                  type=\"button\"\n                  onClick={() => dispatch(deleteContactsThunk(id))}\n                >\n                  <IconContext.Provider value={{ size: '25' }}>\n                    <AiFillDelete />\n                  </IconContext.Provider>\n                </DelBtn>\n              </ContactFrame>\n            </List>\n          ))}\n        </ContactWrap>\n      )}\n    </>\n  );\n};","import styled from '@emotion/styled';\n\nexport const FilterWrap = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 40px;\n`;\n\nexport const InputTitle = styled.label`\n  font-size: 30px;\n  font-weight: 500;\n  color: #7E7B72;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  border: 2px solid #fff;\n  border-radius: 5px;\n  font-size: 20px;\n  outline: none;\n\n  &:focus {\n    border: 2px solid #f7b603c5;\n  }\n`;","import { useDispatch } from 'react-redux';\nimport { filterContact } from 'redux/contacts/filterContactsSlice';\n\nimport { FilterWrap, InputTitle, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  \n  const dispatch = useDispatch();\n\n  const handleInputChange = e => {\n    dispatch(filterContact(e.target.value));\n  };\n\n  return (\n      <FilterWrap>\n        <InputTitle>Find contacts by name</InputTitle>\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          onChange={handleInputChange}\n          autoComplete=\"off\"\n        />\n      </FilterWrap>\n  );\n};","import styled from \"@emotion/styled\";\n\nexport const ContactsWrap = styled.div`\n  margin-top: 40px;\n  margin-bottom: 40px;\n  padding: 15px 10px;\n  display: flex;\n  flex-direction: column;\n  gap: 26px;\n`;\n\nexport const Title = styled.h2`\nmargin: 0;\n    font-size: 50px;\n    color: #7E7B72;\n    text-align: center;\n    letter-spacing: 0.5px;\n`","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Title, ContactsWrap } from './Contacts.styled';\n\nconst Contacts = () => {\n  return (\n    <>\n      <Title>PHONEBOOK</Title>\n      <ContactForm />\n      <ContactsWrap>\n        <Filter />\n        <div>\n          <ContactList />\n        </div>\n      </ContactsWrap>\n    </>\n  );\n};\nexport default Contacts;"],"names":["FormWrap","styled","InputWrap","InputTitle","Input","AddBtn","Notify","width","position","closeButton","timeout","ContactForm","contacts","useSelector","state","dispatch","useDispatch","useState","name","setName","number","setNumber","handleInputChange","e","target","value","newContact","nameInputId","nanoid","numberImputId","onSubmit","preventDefault","find","contact","addContactsThunk","htmlFor","id","type","onChange","autoComplete","pattern","title","required","ContactWrap","List","ContactFrame","ContactCard","ContactValues","DelBtn","ContactList","error","isLoading","filter","filterForContacts","useEffect","getContactsThunk","filteredContacts","toLowerCase","includes","map","onClick","deleteContactsThunk","size","FilterWrap","Filter","filterContact","ContactsWrap","Title"],"sourceRoot":""}